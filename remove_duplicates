#! /usr/bin/python3

import psycopg2
import os

connection = None
try:
    connection = psycopg2.connect("dbname=armand user=armand host=192.168.0.44")

    md5s = dict()
    total_file = 0
    total_size = 0
    with connection:
        with connection.cursor() as cursor:
            cursor.execute("SELECT md5sum, size FROM find_duplicates.files GROUP BY md5sum, size HAVING COUNT(0) > 1")
            for row in cursor.fetchall():
                md5 = row[0]
                size = row[1]
                md5s[size] = md5
                total_size = total_size + size
                total_file = total_file + 1

    removed_size = 0
    handled_file = 0
    for current in sorted(md5s, reverse=True):
        handled_file = handled_file + 1
        same_files_request = """
            SELECT path FROM find_duplicates.files WHERE md5sum = %s
        """
        remove_request = """
            DELETE FROM find_duplicates.files WHERE md5sum = %s
        """

        paths = dict()
        count = 2

        with connection:
            with connection.cursor() as cursor:
                cursor.execute(same_files_request, (md5s[current],))
                local_count = 0
                for path in cursor.fetchall():
                    if os.path.exists(path[0]):
                        paths[count + local_count] = path[0]
                        local_count = local_count + 1
                    else:
                        print("Ignoring ", md5s[current], ":", path[0])
                        cursor.execute(remove_request, (md5s[current],))
                        local_count = 0
                        break
                if 0 == local_count:
                    continue
                count = count + local_count

        print(handled_file, "/", total_file)
        print("Choose which file to keep:")
        print("0 Exit")
        print("1 Next")
        for path in paths:
            print(path, " ", paths[path])
        choice = input(" >> ")

        if int(choice) == 0:
            print("Exiting")
            break
        elif int(choice) == 1:
            print("Skipping")
            continue

        for path in paths:
            if int(path) == int(choice):
                print("Keeping: ", paths[path])
            else:
                print("Removing: ", paths[path])
                os.remove(paths[path])
                removed_size = removed_size + current

        with connection:
            with connection.cursor() as cursor:
                cursor.execute(remove_request, (md5s[current],))
        print(removed_size, "/", total_size)

except psycopg2.DatabaseError as error:
    print(error)
finally:
    if connection is not None:
        connection.close()
