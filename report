#! /usr/bin/python3

import psycopg2
import os

from prettytable import *

connection = None
try:
    connection = psycopg2.connect("dbname=find_duplicates user=armand")
    with connection:
        with connection.cursor() as cursor:
            cursor.execute("SELECT (SELECT COUNT(*) FROM find_duplicates.files WHERE type='f' AND md5sum IS NOT NULL) * 100 / (SELECT COUNT(*) FROM find_duplicates.files WHERE type='f') AS count_percent")
            for row in cursor.fetchall():
                print("Total file progress: ", row[0], "%")
            cursor.execute("select count(*), type from find_duplicates.files group by type")
            pt = from_db_cursor(cursor)
            print(pt)
            cursor.execute("select count(*) AS files_without_hash from find_duplicates.files where md5sum is null and type='f'")
            for row in cursor.fetchall():
                print("Total file count without hash: ", row[0])
            cursor.execute("select COALESCE(sum(size), 0) AS size_to_hash from find_duplicates.files where md5sum is null and type='f';")
            for row in cursor.fetchall():
                size = row[0]
                SizeToHash = PrettyTable(["size", "unit"])
                SizeToHash.add_row([size, 'octet'])
                SizeToHash.add_row([size / 1024, 'Kilo octet'])
                SizeToHash.add_row([size / 1024 / 1024, 'Mega octet'])
                SizeToHash.add_row([size / 1024 / 1024 / 1024, 'Giga octet'])
                SizeToHash.add_row([size / 1024 / 1024 / 1024 / 1024, 'Tera octet'])
                print(SizeToHash)

except psycopg2.DatabaseError as error:
    print(error)
finally:
    if connection is not None:
        connection.close()

# psql -d find_duplicates <<-EOF
# select (select sum(size) from find_duplicates.files where md5sum is not null and type='f')/(select sum(size) from find_duplicates.files where type='f') * 100 AS size_percent;
# select sum(size) / 1024 / 1024 / 1024 || ' Go' AS duplicate_size from find_duplicates.files where md5sum in (select md5sum from find_duplicates.files group by md5sum having count(0) > 1);
# select count(*) AS dir_without_updated_at from find_duplicates.files where type='d' and updated_at is null;
# select avg(c.count) AS average_dir_count_by_updated_at from (select count(*) as count from find_duplicates.files where type='d' group by updated_at order by updated_at) as c;
# select count(*), updated_at from find_duplicates.files where type='d' group by updated_at order by updated_at limit 1;
# select (select updated_at from find_duplicates.files where type='d' and updated_at is not null group by updated_at order by updated_at desc limit 1)
#        - (select updated_at from find_duplicates.files where type='d' and updated_at is not null group by updated_at order by updated_at limit 1) AS update_duration;
# EOF
#
# select md5sum, path from find_duplicates.files where md5sum in (select md5sum from find_duplicates.files group by md5sum having count(0) > 1) order by size DESC, md5sum;
